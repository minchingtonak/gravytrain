version: "3.7"

services:
  n8n:
    image: n8nio/n8n:0.222.1
    container_name: n8n
    restart: always
    ports:
      - '127.0.0.1:9898:9898'
    environment:
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: ${N8N_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_AUTH_PASSWORD}
      N8N_HOST: ${N8N_DOMAIN} # n8n.example.com
      N8N_PATH: ${N8N_SUBPATH}/ # /example-subpath (comment out if not hosting at subpath)
      N8N_PORT: 9898
      N8N_PROTOCOL: https
      NODE_ENV: production
      WEBHOOK_URL: https://${N8N_DOMAIN}${N8N_SUBPATH}/
      GENERIC_TIMEZONE: ${N8N_CRON_TIMEZONE}
      EXECUTIONS_DATA_SAVE_ON_ERROR: all
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: none
      EXECUTIONS_DATA_PRUNE: true
      EXECUTIONS_DATA_MAX_AGE: 336 # 336 hours = 14 days
      EXECUTIONS_DATA_PRUNE_MAX_COUNT: 50000 # keep 50k executions before pruning
    volumes:
      - ./data/local_files:/files
      - ./data/.n8n:/home/node/.n8n
    networks:
      - caddy
    labels:
      caddy: https://${N8N_DOMAIN}:443
      caddy.0_log.level: INFO
      caddy.0_log.output: file /data/caddy.log
      caddy.0_log.output.0_roll_size: 10MB
      caddy.0_log.output.1_roll_keep: 10
      caddy.1_tls: ${N8N_TLS_EMAIL} # Use the ACME HTTP-01 challenge to get a cert for the configured domain
      # caddy.2_reverse_proxy: n8n:9898 # use this directive if not hosting at subpath
      caddy.2_redir: ${N8N_SUBPATH} ${N8N_SUBPATH}/ permanent # use the following directives to host at subpath
      caddy.3_handle_path: ${N8N_SUBPATH}/*
      caddy.3_handle_path.reverse_proxy: n8n:9898
      caddy.4_handle.respond: AccessDenied 403
      caddy.4_handle.respond.close: '{{\"\"}}' # convoluted way of saying no arguments

networks:
  caddy:
    external: true
